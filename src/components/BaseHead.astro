---
import { settings } from "../data/settings";
import "../styles/style.scss";

export interface Props {
    title?: string;
    description?: string;
    image?: string;
    canonicalURL?: URL | string;
}

const title = Astro.props.title || settings.title;
const description = Astro.props.description || settings.description;
const image = new URL(Astro.props.image || "images/touring.webp", Astro.site);
const canonicalURL =
    Astro.props.canonicalURL || new URL(Astro.url.pathname, Astro.site);
---

<head>
    <meta charset="utf-8" />
    <meta
        name="viewport"
        content="width=device-width, initial-scale=1, viewport-fit=cover"
    />

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description || settings.description} />
    <meta name="generator" content={Astro.generator} />

    <!-- Sitemap -->
    <link rel="sitemap" href="/sitemap.xml" />

    <!-- RSS -->
    <link
        rel="alternate"
        type="application/rss+xml"
        title={title}
        href={`${settings.site}/feed/blog.xml`}
    />

    <!-- Canonical -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Preload Header Image -->
    <link rel="preload" as="image" href="images/touring.webp" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />
</head>

<script is:inline>
    // Dark Mode
    if (
        /* This condition checks whether the user has set a site preference for dark mode OR a OS-level preference for Dark Mode AND no site preference */
        localStorage.getItem("color-mode") === "dark" ||
        (window.matchMedia("(prefers-color-scheme: dark)").matches &&
            !localStorage.getItem("color-mode"))
    ) {
        // if true, set the site to Dark Mode
        document.documentElement.setAttribute("color-mode", "dark");
    }
</script>
