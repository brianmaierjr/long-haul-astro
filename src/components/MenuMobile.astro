---
import { menu } from "../data/settings";
import ToggleMenu from "./ToggleMenu.astro";
import { settings } from "../data/settings";
const { triggerId } = Astro.props;
---

<script type="module">
    const body = document.querySelector("body");
    const modal = document.querySelector(".modal");
    const modalId = modal.getAttribute("aria-labelledby");
    const modalCloseButton = modal.querySelector(".modal__close button");
    const modalTrigger = document.querySelector(`#${modalId}`);

    const teleportToRoot = (element) => {
        element.remove();
        body.appendChild(element);
    };
    const getKeyboardFocusableElements = (element) => {
        return [
            ...element.querySelectorAll(
                'a, button, input, textarea, select, details,[tabindex]:not([tabindex="-1"])'
            ),
        ].filter((el) => !el.hasAttribute("disabled"));
    };
    const trapFocus = (event) => {
        const focusables = getKeyboardFocusableElements(modal);
        const firstFocusable = focusables[0];
        const lastFocusable = focusables[focusables.length - 1];
        if (
            document.activeElement === lastFocusable &&
            event.key === "Tab" &&
            !event.shiftKey
        ) {
            event.preventDefault();
            firstFocusable.focus();
        }
        if (
            document.activeElement === firstFocusable &&
            event.key === "Tab" &&
            event.shiftKey
        ) {
            event.preventDefault();
            lastFocusable.focus();
        }
    };
    const openModal = (_) => {
        const modalTitle = modal.querySelector("h3");
        modal.classList.add("show");
        body.classList.add("modal-is-active");
        modalTitle.focus();
        document.addEventListener("keydown", trapFocus);
        modal.addEventListener("keydown", (event) => {
            if (event.key === "Escape") {
                closeModal();
            }
        });
    };
    const closeModal = (_) => {
        modal.classList.remove("show");
        body.classList.remove("modal-is-active");
        modalTrigger.focus({ preventScroll: true });
        document.removeEventListener("keydown", trapFocus);
    };
    // execution
    teleportToRoot(modal);
    modalTrigger.addEventListener("click", openModal);
    modalCloseButton.addEventListener("click", closeModal);
    modal.addEventListener("click", (event) => {
        if (!event.target.closest(".modal__content")) {
            closeModal();
        }
    });
    window.closeModal = closeModal;
</script>

<nav class="modal mobile-nav" role="dialog" aria-labelledby={triggerId}>
    <div class="nav-header">
        <h2 class="header__title">{settings.title}</h2>
        <ToggleMenu additionalClasses="modal__close" icon="ic:baseline-close" />
    </div>

    <ul class="no-list">
        {
            menu.map((item, index) => (
                <>
                    <li class="element">
                        <a href={item.link}>{item.name}</a>
                    </li>
                </>
            ))
        }
    </ul>
</nav>

<style lang="scss">
    .mobile-nav {
        height: 0;
        position: fixed;
        visibility: hidden;
        z-index: -10;
        top: 0;
        left: 0;
        background-color: var(--primary-color);
        padding: var(--space-m);
        overflow: auto;

        &.active {
            z-index: 10;
            display: block;
        }

        h2 {
            color: var(--white);
        }
        a {
            color: var(--white);
            padding: var(--space-2xs) 0;
            display: flex;
            text-decoration: none;
        }

        .mobile-nav-heading {
            margin: 0;
        }
    }

    .nav-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>
